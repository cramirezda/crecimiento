{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 93,
      "metadata": {
        "id": "cXo_v240fEbC"
      },
      "outputs": [],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt"
      ]
    },
    {
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')\n",
        "\n",
        "file_path = '/content/drive/My Drive/Crecimiento/conjunto_de_datos_gastoshogar_enigh2022_ns.csv'\n",
        "df = pd.read_csv(file_path)\n",
        "df.head()"
      ],
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 253
        },
        "id": "gwazRL7Yf_YP",
        "outputId": "6ca65dc2-c46e-489a-b471-342a706dea06"
      },
      "execution_count": 94,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    folioviv  foliohog clave tipo_gasto  mes_dia  forma_pag1  forma_pag2  \\\n",
              "0  100005002         1  A004         G1     1109           1           0   \n",
              "1  100005002         1  A015         G1     1113           1           0   \n",
              "2  100005002         1  A019         G1     1113           1           0   \n",
              "3  100005002         1  A052         G1     1113           1           0   \n",
              "4  100005002         1  A075         G1     1110           1           0   \n",
              "\n",
              "   forma_pag3  lugar_comp  orga_inst  ...  num_pagos  ultim_pago  gasto_tri  \\\n",
              "0           0           5          0  ...                            308.57   \n",
              "1           0           6          0  ...                            745.71   \n",
              "2           0           6          0  ...                            411.42   \n",
              "3           0           6          0  ...                            617.14   \n",
              "4           0           4          0  ...                            269.99   \n",
              "\n",
              "  gasto_nm gas_nm_tri imujer_tri entidad est_dis upm factor  \n",
              "0                                      1       3   1    206  \n",
              "1                                      1       3   1    206  \n",
              "2                                      1       3   1    206  \n",
              "3                                      1       3   1    206  \n",
              "4                                      1       3   1    206  \n",
              "\n",
              "[5 rows x 31 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0715c11b-b59c-4292-92be-29de5b7883ae\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>folioviv</th>\n",
              "      <th>foliohog</th>\n",
              "      <th>clave</th>\n",
              "      <th>tipo_gasto</th>\n",
              "      <th>mes_dia</th>\n",
              "      <th>forma_pag1</th>\n",
              "      <th>forma_pag2</th>\n",
              "      <th>forma_pag3</th>\n",
              "      <th>lugar_comp</th>\n",
              "      <th>orga_inst</th>\n",
              "      <th>...</th>\n",
              "      <th>num_pagos</th>\n",
              "      <th>ultim_pago</th>\n",
              "      <th>gasto_tri</th>\n",
              "      <th>gasto_nm</th>\n",
              "      <th>gas_nm_tri</th>\n",
              "      <th>imujer_tri</th>\n",
              "      <th>entidad</th>\n",
              "      <th>est_dis</th>\n",
              "      <th>upm</th>\n",
              "      <th>factor</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>100005002</td>\n",
              "      <td>1</td>\n",
              "      <td>A004</td>\n",
              "      <td>G1</td>\n",
              "      <td>1109</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>308.57</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>206</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>100005002</td>\n",
              "      <td>1</td>\n",
              "      <td>A015</td>\n",
              "      <td>G1</td>\n",
              "      <td>1113</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>745.71</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>206</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>100005002</td>\n",
              "      <td>1</td>\n",
              "      <td>A019</td>\n",
              "      <td>G1</td>\n",
              "      <td>1113</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>411.42</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>206</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>100005002</td>\n",
              "      <td>1</td>\n",
              "      <td>A052</td>\n",
              "      <td>G1</td>\n",
              "      <td>1113</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>6</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>617.14</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>206</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>100005002</td>\n",
              "      <td>1</td>\n",
              "      <td>A075</td>\n",
              "      <td>G1</td>\n",
              "      <td>1110</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>0</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>...</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>269.99</td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td></td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>206</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>5 rows × 31 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0715c11b-b59c-4292-92be-29de5b7883ae')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0715c11b-b59c-4292-92be-29de5b7883ae button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0715c11b-b59c-4292-92be-29de5b7883ae');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-6a8d220e-8335-4908-a3c1-1bae158d3099\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6a8d220e-8335-4908-a3c1-1bae158d3099')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-6a8d220e-8335-4908-a3c1-1bae158d3099 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df"
            }
          },
          "metadata": {},
          "execution_count": 94
        }
      ]
    },
    {
      "source": [
        "# VIVIENDAS POR TIPO DE GASTO\n",
        "df['gasto_tri'] = pd.to_numeric(df['gasto_tri'], errors='coerce').astype(float)\n",
        "df['gasto_tri_sum']=df.groupby('folioviv')['gasto_tri'].transform('sum')\n",
        "df['tipo'] = df['clave'].str[0]\n",
        "df_tipo=df.groupby(['folioviv','tipo']).agg({'gasto_tri':'sum'})\n",
        "df_tipo"
      ],
      "cell_type": "code",
      "metadata": {
        "id": "Z7lfHuaUhUwf",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "outputId": "83857977-dda6-4209-ff77-2f576176a46e"
      },
      "execution_count": 95,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                 gasto_tri\n",
              "folioviv   tipo           \n",
              "100005002  A       9514.19\n",
              "           C       2075.80\n",
              "           D        673.53\n",
              "           E       2903.22\n",
              "           F       3919.34\n",
              "...                    ...\n",
              "3260797912 H        508.69\n",
              "           J       1956.50\n",
              "           K        391.30\n",
              "           L       3913.04\n",
              "           R       1810.00\n",
              "\n",
              "[814479 rows x 1 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7709ee51-4b45-4c21-9be1-3e82592b8391\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th>gasto_tri</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>folioviv</th>\n",
              "      <th>tipo</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th rowspan=\"5\" valign=\"top\">100005002</th>\n",
              "      <th>A</th>\n",
              "      <td>9514.19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>C</th>\n",
              "      <td>2075.80</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>D</th>\n",
              "      <td>673.53</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>E</th>\n",
              "      <td>2903.22</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>F</th>\n",
              "      <td>3919.34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th rowspan=\"5\" valign=\"top\">3260797912</th>\n",
              "      <th>H</th>\n",
              "      <td>508.69</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>J</th>\n",
              "      <td>1956.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>K</th>\n",
              "      <td>391.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>L</th>\n",
              "      <td>3913.04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>R</th>\n",
              "      <td>1810.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>814479 rows × 1 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7709ee51-4b45-4c21-9be1-3e82592b8391')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7709ee51-4b45-4c21-9be1-3e82592b8391 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7709ee51-4b45-4c21-9be1-3e82592b8391');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-fdf44821-7a42-47ba-93ef-e29e9c15ed8d\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fdf44821-7a42-47ba-93ef-e29e9c15ed8d')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-fdf44821-7a42-47ba-93ef-e29e9c15ed8d button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_8dd885dd-932c-40a8-b0ac-3563d03e0c49\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_tipo')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_8dd885dd-932c-40a8-b0ac-3563d03e0c49 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df_tipo');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_tipo"
            }
          },
          "metadata": {},
          "execution_count": 95
        }
      ]
    },
    {
      "source": [
        "# GASTO TRIMESTA (ME DÍ CUENTA QUE HAY QUE OMITIR Q Y T)\n",
        "folioviv_list = df['folioviv'].unique().tolist()\n",
        "df1=pd.DataFrame(folioviv_list,columns=['folioviv'])\n",
        "df2=pd.DataFrame([df['folioviv'],df['gasto_tri_sum']])\n",
        "df2=df2.transpose()\n",
        "df3=pd.merge(df1,df2,on='folioviv',how='left')\n",
        "df3=df3.drop_duplicates(subset=['folioviv'])\n",
        "df3=df3[df3['gasto_tri_sum']!=0]\n",
        "df3"
      ],
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "CBMbkgUrkOil",
        "outputId": "6790b71c-f974-428c-b99d-b219da6dcc77"
      },
      "execution_count": 98,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           folioviv  gasto_tri_sum\n",
              "0         100005002       32776.89\n",
              "39        100005003       78670.73\n",
              "73        100005004      101647.27\n",
              "113       100012002       73630.16\n",
              "191       100012004       51176.07\n",
              "...             ...            ...\n",
              "5074921  3260797907       35034.05\n",
              "5074992  3260797908       13198.75\n",
              "5075025  3260797909       18702.34\n",
              "5075060  3260797910      117455.55\n",
              "5075126  3260797912       30166.09\n",
              "\n",
              "[88754 rows x 2 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f5488df4-ea3b-43db-9437-5ee137b2f5dd\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>folioviv</th>\n",
              "      <th>gasto_tri_sum</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>100005002</td>\n",
              "      <td>32776.89</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>100005003</td>\n",
              "      <td>78670.73</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>73</th>\n",
              "      <td>100005004</td>\n",
              "      <td>101647.27</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>113</th>\n",
              "      <td>100012002</td>\n",
              "      <td>73630.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>191</th>\n",
              "      <td>100012004</td>\n",
              "      <td>51176.07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5074921</th>\n",
              "      <td>3260797907</td>\n",
              "      <td>35034.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5074992</th>\n",
              "      <td>3260797908</td>\n",
              "      <td>13198.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5075025</th>\n",
              "      <td>3260797909</td>\n",
              "      <td>18702.34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5075060</th>\n",
              "      <td>3260797910</td>\n",
              "      <td>117455.55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5075126</th>\n",
              "      <td>3260797912</td>\n",
              "      <td>30166.09</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>88754 rows × 2 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f5488df4-ea3b-43db-9437-5ee137b2f5dd')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-f5488df4-ea3b-43db-9437-5ee137b2f5dd button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-f5488df4-ea3b-43db-9437-5ee137b2f5dd');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-947200e0-5f81-4f0b-a38f-33a12375d8cb\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-947200e0-5f81-4f0b-a38f-33a12375d8cb')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-947200e0-5f81-4f0b-a38f-33a12375d8cb button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_2b530ff9-be91-4e2c-a703-07ae8f2c2f50\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df3')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_2b530ff9-be91-4e2c-a703-07ae8f2c2f50 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df3');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df3",
              "summary": "{\n  \"name\": \"df3\",\n  \"rows\": 88754,\n  \"fields\": [\n    {\n      \"column\": \"folioviv\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 931401083,\n        \"min\": 100005002,\n        \"max\": 3260797912,\n        \"num_unique_values\": 88754,\n        \"samples\": [\n          1800917406,\n          1910444304,\n          2760035210\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gasto_tri_sum\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 33185.320466603924,\n        \"min\": 24.45,\n        \"max\": 1663770.25,\n        \"num_unique_values\": 88185,\n        \"samples\": [\n          28772.93,\n          40985.31,\n          34413.07\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 98
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df3.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 300
        },
        "id": "PQePxXSbEuGi",
        "outputId": "be141bc2-ab52-4c90-b24d-bf7708e036b2"
      },
      "execution_count": 99,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "           folioviv  gasto_tri_sum\n",
              "count  8.875400e+04   8.875400e+04\n",
              "mean   1.620262e+09   3.529078e+04\n",
              "std    9.314011e+08   3.318532e+04\n",
              "min    1.000050e+08   2.445000e+01\n",
              "25%    8.046570e+08   1.720442e+04\n",
              "50%    1.600914e+09   2.733110e+04\n",
              "75%    2.403893e+09   4.278349e+04\n",
              "max    3.260798e+09   1.663770e+06"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-bfbed578-af4b-4633-9b5e-2c13896772e3\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>folioviv</th>\n",
              "      <th>gasto_tri_sum</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>8.875400e+04</td>\n",
              "      <td>8.875400e+04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>1.620262e+09</td>\n",
              "      <td>3.529078e+04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>9.314011e+08</td>\n",
              "      <td>3.318532e+04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>1.000050e+08</td>\n",
              "      <td>2.445000e+01</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>8.046570e+08</td>\n",
              "      <td>1.720442e+04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>1.600914e+09</td>\n",
              "      <td>2.733110e+04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>2.403893e+09</td>\n",
              "      <td>4.278349e+04</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>3.260798e+09</td>\n",
              "      <td>1.663770e+06</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bfbed578-af4b-4633-9b5e-2c13896772e3')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-bfbed578-af4b-4633-9b5e-2c13896772e3 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-bfbed578-af4b-4633-9b5e-2c13896772e3');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9ae44892-5a41-41b6-a2f3-861d28265187\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9ae44892-5a41-41b6-a2f3-861d28265187')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9ae44892-5a41-41b6-a2f3-861d28265187 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df3\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"folioviv\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1118318240.4663956,\n        \"min\": 88754.0,\n        \"max\": 3260797912.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1620261900.460306,\n          1600914405.5,\n          88754.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gasto_tri_sum\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 576443.1356777613,\n        \"min\": 24.45,\n        \"max\": 1663770.25,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          35290.78138337427,\n          27331.095,\n          88754.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 99
        }
      ]
    },
    {
      "source": [
        "# VIVIENDA POR TIPO DE GASTO SIN Q Y T\n",
        "df_reset = df.reset_index()\n",
        "df_pivot = df_reset.pivot_table(index='folioviv', columns='tipo', values='gasto_tri', aggfunc='sum')\n",
        "df_pivot.fillna(0,inplace=True)\n",
        "df_pivot.drop(['Q','T'],axis=1,inplace=True)\n",
        "df4=df_pivot.copy()\n",
        "df4['total']=df4.sum(axis=1)\n",
        "df_pivot"
      ],
      "cell_type": "code",
      "metadata": {
        "id": "MJe8RIKpWH3f",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "outputId": "ee58bc01-6f46-4914-aa35-e87ac74020b9"
      },
      "execution_count": 101,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "tipo               A    B        C        D        E         F         G  \\\n",
              "folioviv                                                                   \n",
              "100005002    9514.19  0.0  2075.80   673.53  2903.22   3919.34      0.00   \n",
              "100005003   17524.25  0.0  2816.11  3745.14     0.00   5806.44  26709.66   \n",
              "100005004   18321.36  0.0  1422.55  1916.09     0.00  11612.90   2032.25   \n",
              "100012002   27218.37  0.0  2020.58  4264.79  4209.66  26854.82      0.00   \n",
              "100012004    6351.40  0.0  3518.67   812.90  6967.74  19161.28      0.00   \n",
              "...              ...  ...      ...      ...      ...       ...       ...   \n",
              "3260797907  13396.95  0.0  1219.32  1933.51     0.00   5806.45   3774.19   \n",
              "3260797908   7071.35  0.0  1483.51   714.17     0.00   2903.22      0.00   \n",
              "3260797909   6325.68  0.0  3028.03  1643.18     0.00   1451.61   3483.87   \n",
              "3260797910  59322.63  0.0  5530.63   435.48     0.00  14516.12      0.00   \n",
              "3260797912  13512.73  0.0   795.47  3794.49     0.00   3483.87      0.00   \n",
              "\n",
              "tipo              H       I        J       K        L       M         N  \\\n",
              "folioviv                                                                  \n",
              "100005002   2445.64    0.00  2641.29     0.0     0.00    0.00   3423.91   \n",
              "100005003    684.78    0.00     0.00     0.0     0.00    0.00      0.00   \n",
              "100005004      0.00    0.00     0.00     0.0  5380.43    0.00  45489.11   \n",
              "100012002   1369.56   97.82     0.00     0.0     0.00    0.00    244.56   \n",
              "100012004   1751.06    0.00  1007.60     0.0     0.00    0.00   6505.42   \n",
              "...             ...     ...      ...     ...      ...     ...       ...   \n",
              "3260797907   684.77  684.78  1090.75  4891.3     0.00  538.03      0.00   \n",
              "3260797908     0.00    0.00     0.00     0.0     0.00    0.00      0.00   \n",
              "3260797909  1036.95    0.00     0.00     0.0     0.00  831.52      0.00   \n",
              "3260797910     0.00    0.00   782.60     0.0     0.00    0.00      0.00   \n",
              "3260797912   508.69    0.00  1956.50   391.3  3913.04    0.00      0.00   \n",
              "\n",
              "tipo               R  \n",
              "folioviv              \n",
              "100005002    2276.75  \n",
              "100005003    3965.00  \n",
              "100005004   13150.00  \n",
              "100012002    7350.00  \n",
              "100012004    5100.00  \n",
              "...              ...  \n",
              "3260797907   1014.00  \n",
              "3260797908   1026.50  \n",
              "3260797909    901.50  \n",
              "3260797910   2244.00  \n",
              "3260797912   1810.00  \n",
              "\n",
              "[88823 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-513b2680-14e5-406b-92bb-b3c13d3372be\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>tipo</th>\n",
              "      <th>A</th>\n",
              "      <th>B</th>\n",
              "      <th>C</th>\n",
              "      <th>D</th>\n",
              "      <th>E</th>\n",
              "      <th>F</th>\n",
              "      <th>G</th>\n",
              "      <th>H</th>\n",
              "      <th>I</th>\n",
              "      <th>J</th>\n",
              "      <th>K</th>\n",
              "      <th>L</th>\n",
              "      <th>M</th>\n",
              "      <th>N</th>\n",
              "      <th>R</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>folioviv</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>100005002</th>\n",
              "      <td>9514.19</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2075.80</td>\n",
              "      <td>673.53</td>\n",
              "      <td>2903.22</td>\n",
              "      <td>3919.34</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2445.64</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2641.29</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>3423.91</td>\n",
              "      <td>2276.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100005003</th>\n",
              "      <td>17524.25</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2816.11</td>\n",
              "      <td>3745.14</td>\n",
              "      <td>0.00</td>\n",
              "      <td>5806.44</td>\n",
              "      <td>26709.66</td>\n",
              "      <td>684.78</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>3965.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100005004</th>\n",
              "      <td>18321.36</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1422.55</td>\n",
              "      <td>1916.09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>11612.90</td>\n",
              "      <td>2032.25</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5380.43</td>\n",
              "      <td>0.00</td>\n",
              "      <td>45489.11</td>\n",
              "      <td>13150.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100012002</th>\n",
              "      <td>27218.37</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2020.58</td>\n",
              "      <td>4264.79</td>\n",
              "      <td>4209.66</td>\n",
              "      <td>26854.82</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1369.56</td>\n",
              "      <td>97.82</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>244.56</td>\n",
              "      <td>7350.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100012004</th>\n",
              "      <td>6351.40</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3518.67</td>\n",
              "      <td>812.90</td>\n",
              "      <td>6967.74</td>\n",
              "      <td>19161.28</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1751.06</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1007.60</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>6505.42</td>\n",
              "      <td>5100.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3260797907</th>\n",
              "      <td>13396.95</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1219.32</td>\n",
              "      <td>1933.51</td>\n",
              "      <td>0.00</td>\n",
              "      <td>5806.45</td>\n",
              "      <td>3774.19</td>\n",
              "      <td>684.77</td>\n",
              "      <td>684.78</td>\n",
              "      <td>1090.75</td>\n",
              "      <td>4891.3</td>\n",
              "      <td>0.00</td>\n",
              "      <td>538.03</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1014.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3260797908</th>\n",
              "      <td>7071.35</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1483.51</td>\n",
              "      <td>714.17</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2903.22</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1026.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3260797909</th>\n",
              "      <td>6325.68</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3028.03</td>\n",
              "      <td>1643.18</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1451.61</td>\n",
              "      <td>3483.87</td>\n",
              "      <td>1036.95</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>831.52</td>\n",
              "      <td>0.00</td>\n",
              "      <td>901.50</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3260797910</th>\n",
              "      <td>59322.63</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5530.63</td>\n",
              "      <td>435.48</td>\n",
              "      <td>0.00</td>\n",
              "      <td>14516.12</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>782.60</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2244.00</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3260797912</th>\n",
              "      <td>13512.73</td>\n",
              "      <td>0.0</td>\n",
              "      <td>795.47</td>\n",
              "      <td>3794.49</td>\n",
              "      <td>0.00</td>\n",
              "      <td>3483.87</td>\n",
              "      <td>0.00</td>\n",
              "      <td>508.69</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1956.50</td>\n",
              "      <td>391.3</td>\n",
              "      <td>3913.04</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1810.00</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>88823 rows × 15 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-513b2680-14e5-406b-92bb-b3c13d3372be')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-513b2680-14e5-406b-92bb-b3c13d3372be button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-513b2680-14e5-406b-92bb-b3c13d3372be');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-0d356598-195b-44c2-8669-bb59f0de9921\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0d356598-195b-44c2-8669-bb59f0de9921')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-0d356598-195b-44c2-8669-bb59f0de9921 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_3fbdf29d-4d5f-483c-8b0d-f670906e5709\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_pivot')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_3fbdf29d-4d5f-483c-8b0d-f670906e5709 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df_pivot');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_pivot",
              "summary": "{\n  \"name\": \"df_pivot\",\n  \"rows\": 88823,\n  \"fields\": [\n    {\n      \"column\": \"folioviv\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 931422631,\n        \"min\": 100005002,\n        \"max\": 3260797912,\n        \"num_unique_values\": 88823,\n        \"samples\": [\n          1360161604,\n          360196911,\n          1960206609\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"A\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11215.585527381314,\n        \"min\": 0.0,\n        \"max\": 849839.62,\n        \"num_unique_values\": 52237,\n        \"samples\": [\n          28561.96,\n          14721.34,\n          3008.52\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"B\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 77.04351719062251,\n        \"min\": 0.0,\n        \"max\": 6428.55,\n        \"num_unique_values\": 151,\n        \"samples\": [\n          321.4,\n          1028.55,\n          205.69\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"C\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2853.8718916149787,\n        \"min\": 0.0,\n        \"max\": 128197.7,\n        \"num_unique_values\": 15518,\n        \"samples\": [\n          1341.27,\n          444.15000000000003,\n          2267.39\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"D\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2343.238237548831,\n        \"min\": 0.0,\n        \"max\": 69462.0,\n        \"num_unique_values\": 18444,\n        \"samples\": [\n          5346.0,\n          4093.5099999999998,\n          914.46\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"E\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3075.0959819895825,\n        \"min\": 0.0,\n        \"max\": 290496.77,\n        \"num_unique_values\": 2977,\n        \"samples\": [\n          296.12,\n          328.06,\n          3390.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"F\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5060.977069511883,\n        \"min\": 0.0,\n        \"max\": 113806.43999999999,\n        \"num_unique_values\": 4482,\n        \"samples\": [\n          8999.99,\n          1654.8200000000002,\n          42387.09\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"G\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4927.796056275623,\n        \"min\": 0.0,\n        \"max\": 593564.51,\n        \"num_unique_values\": 5577,\n        \"samples\": [\n          711.27,\n          10626.0,\n          1741.91\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"H\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3020.190548080199,\n        \"min\": 0.0,\n        \"max\": 148304.33000000002,\n        \"num_unique_values\": 18921,\n        \"samples\": [\n          3872.9,\n          4248.53,\n          939.09\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"I\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1388.5008601289426,\n        \"min\": 0.0,\n        \"max\": 294740.2,\n        \"num_unique_values\": 3272,\n        \"samples\": [\n          1093.67,\n          1222.81,\n          469.55\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"J\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5702.64328435283,\n        \"min\": 0.0,\n        \"max\": 324547.74,\n        \"num_unique_values\": 12671,\n        \"samples\": [\n          290.54,\n          3629.33,\n          1299.0900000000001\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"K\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4627.1190110402895,\n        \"min\": 0.0,\n        \"max\": 391304.33999999997,\n        \"num_unique_values\": 5887,\n        \"samples\": [\n          2983.41,\n          682.33,\n          98.36\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"L\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1042.8022758509828,\n        \"min\": 0.0,\n        \"max\": 48871.45,\n        \"num_unique_values\": 2805,\n        \"samples\": [\n          56.24,\n          9297.53,\n          3756.52\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"M\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9987.82299967456,\n        \"min\": 0.0,\n        \"max\": 489130.43,\n        \"num_unique_values\": 6075,\n        \"samples\": [\n          4770.48,\n          1526.08,\n          1614.1100000000001\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"N\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6417.554649071503,\n        \"min\": 0.0,\n        \"max\": 756639.3200000001,\n        \"num_unique_values\": 7032,\n        \"samples\": [\n          9696.13,\n          21864.12,\n          2754.0800000000004\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3182.604894412366,\n        \"min\": 0.0,\n        \"max\": 147600.0,\n        \"num_unique_values\": 13795,\n        \"samples\": [\n          9237.0,\n          2665.5,\n          165.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 101
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df4"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "id": "C_za1nUNU82D",
        "outputId": "8414f1e2-04be-4c0f-f5f6-5faa41768e8b"
      },
      "execution_count": 102,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "tipo               A    B        C        D        E         F         G  \\\n",
              "folioviv                                                                   \n",
              "100005002    9514.19  0.0  2075.80   673.53  2903.22   3919.34      0.00   \n",
              "100005003   17524.25  0.0  2816.11  3745.14     0.00   5806.44  26709.66   \n",
              "100005004   18321.36  0.0  1422.55  1916.09     0.00  11612.90   2032.25   \n",
              "100012002   27218.37  0.0  2020.58  4264.79  4209.66  26854.82      0.00   \n",
              "100012004    6351.40  0.0  3518.67   812.90  6967.74  19161.28      0.00   \n",
              "...              ...  ...      ...      ...      ...       ...       ...   \n",
              "3260797907  13396.95  0.0  1219.32  1933.51     0.00   5806.45   3774.19   \n",
              "3260797908   7071.35  0.0  1483.51   714.17     0.00   2903.22      0.00   \n",
              "3260797909   6325.68  0.0  3028.03  1643.18     0.00   1451.61   3483.87   \n",
              "3260797910  59322.63  0.0  5530.63   435.48     0.00  14516.12      0.00   \n",
              "3260797912  13512.73  0.0   795.47  3794.49     0.00   3483.87      0.00   \n",
              "\n",
              "tipo              H       I        J       K        L       M         N  \\\n",
              "folioviv                                                                  \n",
              "100005002   2445.64    0.00  2641.29     0.0     0.00    0.00   3423.91   \n",
              "100005003    684.78    0.00     0.00     0.0     0.00    0.00      0.00   \n",
              "100005004      0.00    0.00     0.00     0.0  5380.43    0.00  45489.11   \n",
              "100012002   1369.56   97.82     0.00     0.0     0.00    0.00    244.56   \n",
              "100012004   1751.06    0.00  1007.60     0.0     0.00    0.00   6505.42   \n",
              "...             ...     ...      ...     ...      ...     ...       ...   \n",
              "3260797907   684.77  684.78  1090.75  4891.3     0.00  538.03      0.00   \n",
              "3260797908     0.00    0.00     0.00     0.0     0.00    0.00      0.00   \n",
              "3260797909  1036.95    0.00     0.00     0.0     0.00  831.52      0.00   \n",
              "3260797910     0.00    0.00   782.60     0.0     0.00    0.00      0.00   \n",
              "3260797912   508.69    0.00  1956.50   391.3  3913.04    0.00      0.00   \n",
              "\n",
              "tipo               R     total  \n",
              "folioviv                        \n",
              "100005002    2276.75  29873.67  \n",
              "100005003    3965.00  61251.38  \n",
              "100005004   13150.00  99324.69  \n",
              "100012002    7350.00  73630.16  \n",
              "100012004    5100.00  51176.07  \n",
              "...              ...       ...  \n",
              "3260797907   1014.00  35034.05  \n",
              "3260797908   1026.50  13198.75  \n",
              "3260797909    901.50  18702.34  \n",
              "3260797910   2244.00  82831.46  \n",
              "3260797912   1810.00  30166.09  \n",
              "\n",
              "[88823 rows x 16 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-11ee00ee-483a-43a6-bd0e-5cf297173695\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>tipo</th>\n",
              "      <th>A</th>\n",
              "      <th>B</th>\n",
              "      <th>C</th>\n",
              "      <th>D</th>\n",
              "      <th>E</th>\n",
              "      <th>F</th>\n",
              "      <th>G</th>\n",
              "      <th>H</th>\n",
              "      <th>I</th>\n",
              "      <th>J</th>\n",
              "      <th>K</th>\n",
              "      <th>L</th>\n",
              "      <th>M</th>\n",
              "      <th>N</th>\n",
              "      <th>R</th>\n",
              "      <th>total</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>folioviv</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>100005002</th>\n",
              "      <td>9514.19</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2075.80</td>\n",
              "      <td>673.53</td>\n",
              "      <td>2903.22</td>\n",
              "      <td>3919.34</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2445.64</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2641.29</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>3423.91</td>\n",
              "      <td>2276.75</td>\n",
              "      <td>29873.67</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100005003</th>\n",
              "      <td>17524.25</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2816.11</td>\n",
              "      <td>3745.14</td>\n",
              "      <td>0.00</td>\n",
              "      <td>5806.44</td>\n",
              "      <td>26709.66</td>\n",
              "      <td>684.78</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>3965.00</td>\n",
              "      <td>61251.38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100005004</th>\n",
              "      <td>18321.36</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1422.55</td>\n",
              "      <td>1916.09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>11612.90</td>\n",
              "      <td>2032.25</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5380.43</td>\n",
              "      <td>0.00</td>\n",
              "      <td>45489.11</td>\n",
              "      <td>13150.00</td>\n",
              "      <td>99324.69</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100012002</th>\n",
              "      <td>27218.37</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2020.58</td>\n",
              "      <td>4264.79</td>\n",
              "      <td>4209.66</td>\n",
              "      <td>26854.82</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1369.56</td>\n",
              "      <td>97.82</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>244.56</td>\n",
              "      <td>7350.00</td>\n",
              "      <td>73630.16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100012004</th>\n",
              "      <td>6351.40</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3518.67</td>\n",
              "      <td>812.90</td>\n",
              "      <td>6967.74</td>\n",
              "      <td>19161.28</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1751.06</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1007.60</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>6505.42</td>\n",
              "      <td>5100.00</td>\n",
              "      <td>51176.07</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3260797907</th>\n",
              "      <td>13396.95</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1219.32</td>\n",
              "      <td>1933.51</td>\n",
              "      <td>0.00</td>\n",
              "      <td>5806.45</td>\n",
              "      <td>3774.19</td>\n",
              "      <td>684.77</td>\n",
              "      <td>684.78</td>\n",
              "      <td>1090.75</td>\n",
              "      <td>4891.3</td>\n",
              "      <td>0.00</td>\n",
              "      <td>538.03</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1014.00</td>\n",
              "      <td>35034.05</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3260797908</th>\n",
              "      <td>7071.35</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1483.51</td>\n",
              "      <td>714.17</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2903.22</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1026.50</td>\n",
              "      <td>13198.75</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3260797909</th>\n",
              "      <td>6325.68</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3028.03</td>\n",
              "      <td>1643.18</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1451.61</td>\n",
              "      <td>3483.87</td>\n",
              "      <td>1036.95</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>831.52</td>\n",
              "      <td>0.00</td>\n",
              "      <td>901.50</td>\n",
              "      <td>18702.34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3260797910</th>\n",
              "      <td>59322.63</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5530.63</td>\n",
              "      <td>435.48</td>\n",
              "      <td>0.00</td>\n",
              "      <td>14516.12</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>782.60</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2244.00</td>\n",
              "      <td>82831.46</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3260797912</th>\n",
              "      <td>13512.73</td>\n",
              "      <td>0.0</td>\n",
              "      <td>795.47</td>\n",
              "      <td>3794.49</td>\n",
              "      <td>0.00</td>\n",
              "      <td>3483.87</td>\n",
              "      <td>0.00</td>\n",
              "      <td>508.69</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1956.50</td>\n",
              "      <td>391.3</td>\n",
              "      <td>3913.04</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1810.00</td>\n",
              "      <td>30166.09</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>88823 rows × 16 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-11ee00ee-483a-43a6-bd0e-5cf297173695')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-11ee00ee-483a-43a6-bd0e-5cf297173695 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-11ee00ee-483a-43a6-bd0e-5cf297173695');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-eeb7e864-a3ab-4795-83f6-a867c8650292\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-eeb7e864-a3ab-4795-83f6-a867c8650292')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-eeb7e864-a3ab-4795-83f6-a867c8650292 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_0f0439e8-3ef3-4d78-9d67-4226dc56b3e9\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df4')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_0f0439e8-3ef3-4d78-9d67-4226dc56b3e9 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df4');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df4",
              "summary": "{\n  \"name\": \"df4\",\n  \"rows\": 88823,\n  \"fields\": [\n    {\n      \"column\": \"folioviv\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 931422631,\n        \"min\": 100005002,\n        \"max\": 3260797912,\n        \"num_unique_values\": 88823,\n        \"samples\": [\n          1360161604,\n          360196911,\n          1960206609\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"A\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11215.585527381314,\n        \"min\": 0.0,\n        \"max\": 849839.62,\n        \"num_unique_values\": 52237,\n        \"samples\": [\n          28561.96,\n          14721.34,\n          3008.52\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"B\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 77.04351719062251,\n        \"min\": 0.0,\n        \"max\": 6428.55,\n        \"num_unique_values\": 151,\n        \"samples\": [\n          321.4,\n          1028.55,\n          205.69\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"C\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2853.8718916149787,\n        \"min\": 0.0,\n        \"max\": 128197.7,\n        \"num_unique_values\": 15518,\n        \"samples\": [\n          1341.27,\n          444.15000000000003,\n          2267.39\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"D\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2343.238237548831,\n        \"min\": 0.0,\n        \"max\": 69462.0,\n        \"num_unique_values\": 18444,\n        \"samples\": [\n          5346.0,\n          4093.5099999999998,\n          914.46\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"E\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3075.0959819895825,\n        \"min\": 0.0,\n        \"max\": 290496.77,\n        \"num_unique_values\": 2977,\n        \"samples\": [\n          296.12,\n          328.06,\n          3390.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"F\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5060.977069511883,\n        \"min\": 0.0,\n        \"max\": 113806.43999999999,\n        \"num_unique_values\": 4482,\n        \"samples\": [\n          8999.99,\n          1654.8200000000002,\n          42387.09\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"G\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4927.796056275623,\n        \"min\": 0.0,\n        \"max\": 593564.51,\n        \"num_unique_values\": 5577,\n        \"samples\": [\n          711.27,\n          10626.0,\n          1741.91\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"H\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3020.190548080199,\n        \"min\": 0.0,\n        \"max\": 148304.33000000002,\n        \"num_unique_values\": 18921,\n        \"samples\": [\n          3872.9,\n          4248.53,\n          939.09\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"I\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1388.5008601289426,\n        \"min\": 0.0,\n        \"max\": 294740.2,\n        \"num_unique_values\": 3272,\n        \"samples\": [\n          1093.67,\n          1222.81,\n          469.55\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"J\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5702.64328435283,\n        \"min\": 0.0,\n        \"max\": 324547.74,\n        \"num_unique_values\": 12671,\n        \"samples\": [\n          290.54,\n          3629.33,\n          1299.0900000000001\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"K\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4627.1190110402895,\n        \"min\": 0.0,\n        \"max\": 391304.33999999997,\n        \"num_unique_values\": 5887,\n        \"samples\": [\n          2983.41,\n          682.33,\n          98.36\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"L\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1042.8022758509828,\n        \"min\": 0.0,\n        \"max\": 48871.45,\n        \"num_unique_values\": 2805,\n        \"samples\": [\n          56.24,\n          9297.53,\n          3756.52\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"M\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9987.82299967456,\n        \"min\": 0.0,\n        \"max\": 489130.43,\n        \"num_unique_values\": 6075,\n        \"samples\": [\n          4770.48,\n          1526.08,\n          1614.1100000000001\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"N\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6417.554649071503,\n        \"min\": 0.0,\n        \"max\": 756639.3200000001,\n        \"num_unique_values\": 7032,\n        \"samples\": [\n          9696.13,\n          21864.12,\n          2754.0800000000004\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3182.604894412366,\n        \"min\": 0.0,\n        \"max\": 147600.0,\n        \"num_unique_values\": 13795,\n        \"samples\": [\n          9237.0,\n          2665.5,\n          165.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32568.987389120273,\n        \"min\": 0.0,\n        \"max\": 1663770.25,\n        \"num_unique_values\": 88422,\n        \"samples\": [\n          10277.14,\n          19972.72,\n          54210.56999999999\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 102
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# APLICACIÓN DE ANÁLISIS POR COMPONENTES PRINCIPALES\n",
        "\n",
        "from sklearn.decomposition import PCA\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "\n",
        "\n",
        "# ESTANDARIZACIÓN\n",
        "scaler = StandardScaler()\n",
        "X_scaled = scaler.fit_transform(df_pivot)\n",
        "\n",
        "# PCA\n",
        "pca = PCA()\n",
        "pca.fit(X_scaled)\n",
        "\n",
        "print(\"Eigenvalores (autovalores):\", pca.explained_variance_)\n",
        "print(\"Varianza explicada por cada componente:\", pca.explained_variance_ratio_)\n",
        "print(\"Componentes principales (autovectores):\\n\", pca.components_)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "kYruKucEW6i1",
        "outputId": "d6577bee-c540-4241-8dea-9c173d8b3196"
      },
      "execution_count": 103,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Eigenvalores (autovalores): [3.59330559 1.07771117 1.03372786 1.00009361 0.94215106 0.92471398\n",
            " 0.90589438 0.86809713 0.8394844  0.82592787 0.73083637 0.66548975\n",
            " 0.57647704 0.53900877 0.4772499 ]\n",
            "Varianza explicada por cada componente: [0.23955101 0.0718466  0.06891441 0.06667216 0.06280936 0.0616469\n",
            " 0.06039228 0.05787249 0.055965   0.05506124 0.04872188 0.04436548\n",
            " 0.03843137 0.03593351 0.0318163 ]\n",
            "Componentes principales (autovectores):\n",
            " [[ 3.65621143e-01 -1.81651446e-03  3.40565315e-01  3.76701504e-01\n",
            "   2.48223274e-01  3.37335989e-01  1.60632159e-01  3.55560513e-01\n",
            "   1.57945533e-01  1.35647129e-01  1.25511449e-01  1.92148072e-01\n",
            "   1.48259066e-01  2.33302432e-01  3.29182434e-01]\n",
            " [-6.17948327e-02  3.54457328e-02 -1.82837777e-01 -1.13171522e-01\n",
            "  -4.19832389e-02 -1.48401198e-01 -2.64846048e-01  1.49048097e-01\n",
            "   5.60159564e-01 -4.07345686e-02  4.94467088e-01  4.37246771e-01\n",
            "   5.59341068e-02  1.08115119e-01 -2.58080016e-01]\n",
            " [-1.39064051e-01 -1.34389909e-01  7.86923617e-03 -1.22182594e-01\n",
            "  -1.18112929e-01  8.91004833e-02 -3.08697774e-01 -9.06930974e-02\n",
            "  -2.46863399e-01  5.80522187e-01  2.24637861e-01 -1.44903690e-01\n",
            "   5.71577806e-01  1.55999295e-01  4.19184090e-02]\n",
            " [-2.21678810e-02  9.87408876e-01 -6.75708096e-04 -1.49192990e-02\n",
            "   4.54227520e-02  8.22513548e-03 -6.86763817e-02 -5.95845582e-03\n",
            "  -7.13963923e-02  6.76383797e-02  1.52465001e-02 -3.88347202e-02\n",
            "   7.17538808e-02  1.75993258e-02  2.35602148e-02]\n",
            " [-5.32759776e-02  2.72309725e-03 -1.86929528e-01 -1.42445478e-01\n",
            "   1.76396637e-01 -1.16644124e-01  4.21753615e-01 -1.01406053e-02\n",
            "  -9.82633592e-02 -2.19841457e-01 -3.26479960e-01  3.51211385e-01\n",
            "   5.84685936e-01  2.44531281e-01 -1.72170199e-01]\n",
            " [ 1.86328804e-03  3.65994989e-02  4.16261161e-02 -9.84779268e-03\n",
            "  -1.79893125e-01 -1.89806514e-01  2.87409261e-01  3.80784655e-02\n",
            "   3.95056202e-01  6.80983870e-01 -4.16497914e-01  9.15625110e-02\n",
            "  -1.38983003e-01 -9.66250573e-02 -1.18616501e-01]\n",
            " [-1.04955158e-02  2.62339402e-02 -4.64296848e-03 -6.91417656e-02\n",
            "  -9.54124686e-02 -8.72706083e-02  6.75269958e-01 -1.24909435e-01\n",
            "  -2.48773074e-01  1.49210208e-01  6.12206302e-01 -9.18768963e-03\n",
            "  -1.89127321e-01  7.47626499e-02 -7.54758690e-02]\n",
            " [-7.34931143e-03 -4.65641647e-02  3.16614423e-02 -5.75077582e-02\n",
            "   5.43590825e-01 -2.44397876e-01 -2.42752835e-01  5.01968473e-02\n",
            "  -3.83891770e-01  2.53212646e-01 -7.03063760e-02  2.81521963e-01\n",
            "  -3.96660242e-01  3.15056333e-01 -1.56560626e-01]\n",
            " [ 8.76724907e-03  1.20488846e-02  4.47329495e-02 -4.56602826e-02\n",
            "  -1.91099542e-01 -6.73074666e-02  9.41050752e-03  3.16313837e-02\n",
            "   2.05125120e-01 -1.16870634e-01 -8.96184501e-02 -4.58014137e-01\n",
            "  -1.11635116e-01  8.10600391e-01 -1.02346271e-01]\n",
            " [-1.86602595e-02  3.00772284e-02  1.74159276e-01 -1.14458922e-01\n",
            "  -5.58641050e-01  1.48376099e-01 -9.93193654e-02 -2.55324778e-01\n",
            "  -1.81019825e-01 -5.65688756e-02 -1.17925173e-01  5.65171754e-01\n",
            "  -1.74171651e-01  2.33681376e-01  3.03196415e-01]\n",
            " [ 2.86336923e-01  1.52191832e-02 -2.25379705e-02  3.67819983e-01\n",
            "  -4.43814328e-01 -2.15822803e-01 -9.33360309e-02  4.57000190e-01\n",
            "  -3.63745686e-01 -3.58895068e-02 -2.25128657e-02  4.22350871e-02\n",
            "   6.16600903e-02 -5.71760274e-02 -4.21791343e-01]\n",
            " [-2.10563092e-02  7.90955235e-04  7.46453621e-01  6.42584549e-02\n",
            "   3.69172835e-02 -5.48044384e-01 -4.31481282e-02 -2.43227989e-01\n",
            "   7.93484825e-02 -1.35094585e-01  6.92385524e-02 -1.64970748e-02\n",
            "   1.94783384e-01 -8.27468372e-02 -3.31094529e-02]\n",
            " [ 7.96169164e-01 -3.56704145e-03 -2.34335525e-01 -3.36510752e-01\n",
            "  -9.36539731e-05 -3.08268387e-01 -6.83095907e-02 -1.49308906e-01\n",
            "   1.68669116e-02  2.58840618e-02  2.64917102e-02 -6.45844869e-02\n",
            "   5.44694825e-02 -2.76439371e-02  2.57685860e-01]\n",
            " [-3.50502679e-01 -1.43235116e-02 -1.82321419e-01  6.74352781e-03\n",
            "  -6.68379769e-02 -4.81827995e-01  4.10813426e-02  4.60774803e-01\n",
            "  -4.93873662e-02 -2.21558629e-02  2.52438406e-02 -2.90774088e-02\n",
            "   5.88405255e-03  1.53792148e-02  6.23173830e-01]\n",
            " [-8.46444097e-03  1.80277050e-04 -3.66927989e-01  7.30595809e-01\n",
            "   3.37144389e-02 -1.96292167e-01 -4.20038451e-02 -5.04597731e-01\n",
            "   6.38299473e-02  4.84944345e-02  2.60317239e-02  4.52585369e-02\n",
            "   3.48735495e-02  1.11610302e-01  1.12456582e-01]]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#OBTENCIÓN DE LOS SCORES POR HOGAR (COMBINACIÓN LINEAL DEL PRIMER EIGENVETOR POR LAS OBSERVACIONES DE TIPO DE GASTO)\n",
        "scores = pca.transform(X_scaled)\n",
        "indice_pobreza = scores[:, 0]\n",
        "print(indice_pobreza)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ys8FfuM-MAZc",
        "outputId": "9ad9d306-b891-4d7b-8950-0d3d37ec7b28"
      },
      "execution_count": 104,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[-0.22491892  1.16046152  3.82324362 ... -0.82766308  1.78480813\n",
            "  0.30556514]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# DATAFRAME DE LAS OBSERVACIONES ESTANDARIZADAS\n",
        "df_scaled = pd.DataFrame(X_scaled, columns=df_pivot.columns)\n",
        "df_scaled"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "7LxxERfOPAjb",
        "outputId": "74e6028b-a8a9-40d7-facd-5754754e2abd"
      },
      "execution_count": 105,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "tipo          A         B         C         D         E         F         G  \\\n",
              "0     -0.419381 -0.040624  0.106786 -0.680192  0.686328  0.049262 -0.405551   \n",
              "1      0.294813 -0.040624  0.366193  0.630655 -0.257784  0.422137  5.014683   \n",
              "2      0.365886 -0.040624 -0.122115 -0.149914 -0.257784  1.569443  0.006857   \n",
              "3      1.159162 -0.040624  0.087437  0.852422  1.111176  4.581116 -0.405551   \n",
              "4     -0.701382 -0.040624  0.612372 -0.620714  2.008089  3.060939 -0.405551   \n",
              "...         ...       ...       ...       ...       ...       ...       ...   \n",
              "88818 -0.073185 -0.040624 -0.193327 -0.142480 -0.257784  0.422139  0.360351   \n",
              "88819 -0.637189 -0.040624 -0.100754 -0.662849 -0.257784 -0.151515 -0.405551   \n",
              "88820 -0.703675 -0.040624  0.440450 -0.266382 -0.257784 -0.438340  0.301436   \n",
              "88821  4.021647 -0.040624  1.317369 -0.781783 -0.257784  2.143095 -0.405551   \n",
              "88822 -0.062862 -0.040624 -0.341846  0.651716 -0.257784 -0.036783 -0.405551   \n",
              "\n",
              "tipo          H         I         J         K         L         M         N  \\\n",
              "0      0.225999 -0.159798  0.237358 -0.180314 -0.184174 -0.154886  0.291738   \n",
              "1     -0.357034 -0.159798 -0.225814 -0.180314 -0.184174 -0.154886 -0.241787   \n",
              "2     -0.583769 -0.159798 -0.225814 -0.180314  4.975443 -0.154886  6.846483   \n",
              "3     -0.130298 -0.089347 -0.225814 -0.180314 -0.184174 -0.154886 -0.203679   \n",
              "4     -0.003981 -0.159798 -0.049123 -0.180314 -0.184174 -0.154886  0.771910   \n",
              "...         ...       ...       ...       ...       ...       ...       ...   \n",
              "88818 -0.357037  0.333385 -0.034542  0.876786 -0.184174 -0.101017 -0.241787   \n",
              "88819 -0.583769 -0.159798 -0.225814 -0.180314 -0.184174 -0.154886 -0.241787   \n",
              "88820 -0.240428 -0.159798 -0.225814 -0.180314 -0.184174 -0.071632 -0.241787   \n",
              "88821 -0.583769 -0.159798 -0.088578 -0.180314 -0.184174 -0.154886 -0.241787   \n",
              "88822 -0.415338 -0.159798  0.117275 -0.095747  3.568275 -0.154886 -0.241787   \n",
              "\n",
              "tipo          R  \n",
              "0     -0.145895  \n",
              "1      0.384569  \n",
              "2      3.270586  \n",
              "3      1.448170  \n",
              "4      0.741198  \n",
              "...         ...  \n",
              "88818 -0.542664  \n",
              "88819 -0.538736  \n",
              "88820 -0.578012  \n",
              "88821 -0.156186  \n",
              "88822 -0.292553  \n",
              "\n",
              "[88823 rows x 15 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-fd2ce2c9-1c4b-471f-8926-b70ca42c07ba\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>tipo</th>\n",
              "      <th>A</th>\n",
              "      <th>B</th>\n",
              "      <th>C</th>\n",
              "      <th>D</th>\n",
              "      <th>E</th>\n",
              "      <th>F</th>\n",
              "      <th>G</th>\n",
              "      <th>H</th>\n",
              "      <th>I</th>\n",
              "      <th>J</th>\n",
              "      <th>K</th>\n",
              "      <th>L</th>\n",
              "      <th>M</th>\n",
              "      <th>N</th>\n",
              "      <th>R</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-0.419381</td>\n",
              "      <td>-0.040624</td>\n",
              "      <td>0.106786</td>\n",
              "      <td>-0.680192</td>\n",
              "      <td>0.686328</td>\n",
              "      <td>0.049262</td>\n",
              "      <td>-0.405551</td>\n",
              "      <td>0.225999</td>\n",
              "      <td>-0.159798</td>\n",
              "      <td>0.237358</td>\n",
              "      <td>-0.180314</td>\n",
              "      <td>-0.184174</td>\n",
              "      <td>-0.154886</td>\n",
              "      <td>0.291738</td>\n",
              "      <td>-0.145895</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.294813</td>\n",
              "      <td>-0.040624</td>\n",
              "      <td>0.366193</td>\n",
              "      <td>0.630655</td>\n",
              "      <td>-0.257784</td>\n",
              "      <td>0.422137</td>\n",
              "      <td>5.014683</td>\n",
              "      <td>-0.357034</td>\n",
              "      <td>-0.159798</td>\n",
              "      <td>-0.225814</td>\n",
              "      <td>-0.180314</td>\n",
              "      <td>-0.184174</td>\n",
              "      <td>-0.154886</td>\n",
              "      <td>-0.241787</td>\n",
              "      <td>0.384569</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.365886</td>\n",
              "      <td>-0.040624</td>\n",
              "      <td>-0.122115</td>\n",
              "      <td>-0.149914</td>\n",
              "      <td>-0.257784</td>\n",
              "      <td>1.569443</td>\n",
              "      <td>0.006857</td>\n",
              "      <td>-0.583769</td>\n",
              "      <td>-0.159798</td>\n",
              "      <td>-0.225814</td>\n",
              "      <td>-0.180314</td>\n",
              "      <td>4.975443</td>\n",
              "      <td>-0.154886</td>\n",
              "      <td>6.846483</td>\n",
              "      <td>3.270586</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.159162</td>\n",
              "      <td>-0.040624</td>\n",
              "      <td>0.087437</td>\n",
              "      <td>0.852422</td>\n",
              "      <td>1.111176</td>\n",
              "      <td>4.581116</td>\n",
              "      <td>-0.405551</td>\n",
              "      <td>-0.130298</td>\n",
              "      <td>-0.089347</td>\n",
              "      <td>-0.225814</td>\n",
              "      <td>-0.180314</td>\n",
              "      <td>-0.184174</td>\n",
              "      <td>-0.154886</td>\n",
              "      <td>-0.203679</td>\n",
              "      <td>1.448170</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-0.701382</td>\n",
              "      <td>-0.040624</td>\n",
              "      <td>0.612372</td>\n",
              "      <td>-0.620714</td>\n",
              "      <td>2.008089</td>\n",
              "      <td>3.060939</td>\n",
              "      <td>-0.405551</td>\n",
              "      <td>-0.003981</td>\n",
              "      <td>-0.159798</td>\n",
              "      <td>-0.049123</td>\n",
              "      <td>-0.180314</td>\n",
              "      <td>-0.184174</td>\n",
              "      <td>-0.154886</td>\n",
              "      <td>0.771910</td>\n",
              "      <td>0.741198</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>88818</th>\n",
              "      <td>-0.073185</td>\n",
              "      <td>-0.040624</td>\n",
              "      <td>-0.193327</td>\n",
              "      <td>-0.142480</td>\n",
              "      <td>-0.257784</td>\n",
              "      <td>0.422139</td>\n",
              "      <td>0.360351</td>\n",
              "      <td>-0.357037</td>\n",
              "      <td>0.333385</td>\n",
              "      <td>-0.034542</td>\n",
              "      <td>0.876786</td>\n",
              "      <td>-0.184174</td>\n",
              "      <td>-0.101017</td>\n",
              "      <td>-0.241787</td>\n",
              "      <td>-0.542664</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>88819</th>\n",
              "      <td>-0.637189</td>\n",
              "      <td>-0.040624</td>\n",
              "      <td>-0.100754</td>\n",
              "      <td>-0.662849</td>\n",
              "      <td>-0.257784</td>\n",
              "      <td>-0.151515</td>\n",
              "      <td>-0.405551</td>\n",
              "      <td>-0.583769</td>\n",
              "      <td>-0.159798</td>\n",
              "      <td>-0.225814</td>\n",
              "      <td>-0.180314</td>\n",
              "      <td>-0.184174</td>\n",
              "      <td>-0.154886</td>\n",
              "      <td>-0.241787</td>\n",
              "      <td>-0.538736</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>88820</th>\n",
              "      <td>-0.703675</td>\n",
              "      <td>-0.040624</td>\n",
              "      <td>0.440450</td>\n",
              "      <td>-0.266382</td>\n",
              "      <td>-0.257784</td>\n",
              "      <td>-0.438340</td>\n",
              "      <td>0.301436</td>\n",
              "      <td>-0.240428</td>\n",
              "      <td>-0.159798</td>\n",
              "      <td>-0.225814</td>\n",
              "      <td>-0.180314</td>\n",
              "      <td>-0.184174</td>\n",
              "      <td>-0.071632</td>\n",
              "      <td>-0.241787</td>\n",
              "      <td>-0.578012</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>88821</th>\n",
              "      <td>4.021647</td>\n",
              "      <td>-0.040624</td>\n",
              "      <td>1.317369</td>\n",
              "      <td>-0.781783</td>\n",
              "      <td>-0.257784</td>\n",
              "      <td>2.143095</td>\n",
              "      <td>-0.405551</td>\n",
              "      <td>-0.583769</td>\n",
              "      <td>-0.159798</td>\n",
              "      <td>-0.088578</td>\n",
              "      <td>-0.180314</td>\n",
              "      <td>-0.184174</td>\n",
              "      <td>-0.154886</td>\n",
              "      <td>-0.241787</td>\n",
              "      <td>-0.156186</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>88822</th>\n",
              "      <td>-0.062862</td>\n",
              "      <td>-0.040624</td>\n",
              "      <td>-0.341846</td>\n",
              "      <td>0.651716</td>\n",
              "      <td>-0.257784</td>\n",
              "      <td>-0.036783</td>\n",
              "      <td>-0.405551</td>\n",
              "      <td>-0.415338</td>\n",
              "      <td>-0.159798</td>\n",
              "      <td>0.117275</td>\n",
              "      <td>-0.095747</td>\n",
              "      <td>3.568275</td>\n",
              "      <td>-0.154886</td>\n",
              "      <td>-0.241787</td>\n",
              "      <td>-0.292553</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>88823 rows × 15 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-fd2ce2c9-1c4b-471f-8926-b70ca42c07ba')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-fd2ce2c9-1c4b-471f-8926-b70ca42c07ba button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-fd2ce2c9-1c4b-471f-8926-b70ca42c07ba');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-f9739fc4-a3b3-41d9-a032-7d9e0bd00f31\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f9739fc4-a3b3-41d9-a032-7d9e0bd00f31')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-f9739fc4-a3b3-41d9-a032-7d9e0bd00f31 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_1c13550d-e032-4019-9f08-a5daf941d9c4\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_scaled')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_1c13550d-e032-4019-9f08-a5daf941d9c4 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df_scaled');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_scaled",
              "summary": "{\n  \"name\": \"df_scaled\",\n  \"rows\": 88823,\n  \"fields\": [\n    {\n      \"column\": \"A\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000056292201565,\n        \"min\": -1.2676861684819627,\n        \"max\": 74.50583469313904,\n        \"num_unique_values\": 51438,\n        \"samples\": [\n          -0.8261748570510393,\n          -0.8928280162907848,\n          -0.8693320086352998\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"B\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000056292195705,\n        \"min\": -0.04062405002735116,\n        \"max\": 83.40035089685107,\n        \"num_unique_values\": 150,\n        \"samples\": [\n          8.303408545908091,\n          13.309698305964556,\n          2.6290510286566366\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"C\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.000005629220177,\n        \"min\": -0.6205808234468028,\n        \"max\": 44.30029387654817,\n        \"num_unique_values\": 15060,\n        \"samples\": [\n          0.5157274545459044,\n          -0.05600430035687301,\n          12.793513064111167\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"D\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000056292201287,\n        \"min\": -0.9676293526657449,\n        \"max\": 28.676130254787097,\n        \"num_unique_values\": 18008,\n        \"samples\": [\n          2.1422170572084505,\n          0.551354069147607,\n          -0.6654816776480862\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"E\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000056292203072,\n        \"min\": -0.25778429918639195,\n        \"max\": 94.2102931109001,\n        \"num_unique_values\": 2944,\n        \"samples\": [\n          1.3472055325943868,\n          2.1780265530497447,\n          1.911786210148817\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"F\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000056292200925,\n        \"min\": -0.7251658931058531,\n        \"max\": 21.762009819880838,\n        \"num_unique_values\": 4412,\n        \"samples\": [\n          -0.24330168103223476,\n          0.5024458680888629,\n          -0.05177434487836569\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"G\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000056292196815,\n        \"min\": -0.405551066719964,\n        \"max\": 120.04745561751905,\n        \"num_unique_values\": 5518,\n        \"samples\": [\n          -0.000803953669497581,\n          1.0726028422595282,\n          -0.10037032295858296\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"H\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000056292202992,\n        \"min\": -0.5837690097286052,\n        \"max\": 48.52080319416908,\n        \"num_unique_values\": 18559,\n        \"samples\": [\n          0.7225400280762484,\n          2.8933788551431077,\n          0.5790482739514488\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"I\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000056292193387,\n        \"min\": -0.15979765985815797,\n        \"max\": 212.11364603831157,\n        \"num_unique_values\": 3217,\n        \"samples\": [\n          0.4425892254177092,\n          1.9890571816562268,\n          5.9556741004915725\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"J\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.000005629219897,\n        \"min\": -0.22581368694385576,\n        \"max\": 56.6863147362372,\n        \"num_unique_values\": 12168,\n        \"samples\": [\n          -0.008295788533340677,\n          0.023780745203015905,\n          -0.1258033615528713\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"K\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000056292197006,\n        \"min\": -0.18031397182755285,\n        \"max\": 84.38775998624554,\n        \"num_unique_values\": 5844,\n        \"samples\": [\n          -0.02597732773186317,\n          0.04820315722102287,\n          3.0533556596335476\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"L\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.000005629220042,\n        \"min\": -0.1841740099776225,\n        \"max\": 46.68158974976791,\n        \"num_unique_values\": 2792,\n        \"samples\": [\n          13.840135931806355,\n          10.318777419390388,\n          0.41152232786208415\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"M\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000056292195505,\n        \"min\": -0.15488626695860816,\n        \"max\": 48.818066441460026,\n        \"num_unique_values\": 5992,\n        \"samples\": [\n          0.7711075219549292,\n          7.772843902676216,\n          -0.09464757562014436\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"N\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000056292206003,\n        \"min\": -0.24178744165245153,\n        \"max\": 117.6603763363363,\n        \"num_unique_values\": 6924,\n        \"samples\": [\n          2.593687038633037,\n          0.7025526452293943,\n          -0.2398723712159436\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000056292201551,\n        \"min\": -0.861272438528635,\n        \"max\": 45.516093200553044,\n        \"num_unique_values\": 13795,\n        \"samples\": [\n          2.041083431445603,\n          -0.023746231814731053,\n          -0.8094278224686859\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 105
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# INCORPORACIÓN DE LOS ÍNDICES DE POBREZA\n",
        "df_scaled['indice_pobreza'] = indice_pobreza\n",
        "df_scaled"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "fvLSOQmMQzxr",
        "outputId": "e515f9ee-8032-4fde-d824-aa8c64540f0a"
      },
      "execution_count": 106,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "tipo          A         B         C         D         E         F         G  \\\n",
              "0     -0.419381 -0.040624  0.106786 -0.680192  0.686328  0.049262 -0.405551   \n",
              "1      0.294813 -0.040624  0.366193  0.630655 -0.257784  0.422137  5.014683   \n",
              "2      0.365886 -0.040624 -0.122115 -0.149914 -0.257784  1.569443  0.006857   \n",
              "3      1.159162 -0.040624  0.087437  0.852422  1.111176  4.581116 -0.405551   \n",
              "4     -0.701382 -0.040624  0.612372 -0.620714  2.008089  3.060939 -0.405551   \n",
              "...         ...       ...       ...       ...       ...       ...       ...   \n",
              "88818 -0.073185 -0.040624 -0.193327 -0.142480 -0.257784  0.422139  0.360351   \n",
              "88819 -0.637189 -0.040624 -0.100754 -0.662849 -0.257784 -0.151515 -0.405551   \n",
              "88820 -0.703675 -0.040624  0.440450 -0.266382 -0.257784 -0.438340  0.301436   \n",
              "88821  4.021647 -0.040624  1.317369 -0.781783 -0.257784  2.143095 -0.405551   \n",
              "88822 -0.062862 -0.040624 -0.341846  0.651716 -0.257784 -0.036783 -0.405551   \n",
              "\n",
              "tipo          H         I         J         K         L         M         N  \\\n",
              "0      0.225999 -0.159798  0.237358 -0.180314 -0.184174 -0.154886  0.291738   \n",
              "1     -0.357034 -0.159798 -0.225814 -0.180314 -0.184174 -0.154886 -0.241787   \n",
              "2     -0.583769 -0.159798 -0.225814 -0.180314  4.975443 -0.154886  6.846483   \n",
              "3     -0.130298 -0.089347 -0.225814 -0.180314 -0.184174 -0.154886 -0.203679   \n",
              "4     -0.003981 -0.159798 -0.049123 -0.180314 -0.184174 -0.154886  0.771910   \n",
              "...         ...       ...       ...       ...       ...       ...       ...   \n",
              "88818 -0.357037  0.333385 -0.034542  0.876786 -0.184174 -0.101017 -0.241787   \n",
              "88819 -0.583769 -0.159798 -0.225814 -0.180314 -0.184174 -0.154886 -0.241787   \n",
              "88820 -0.240428 -0.159798 -0.225814 -0.180314 -0.184174 -0.071632 -0.241787   \n",
              "88821 -0.583769 -0.159798 -0.088578 -0.180314 -0.184174 -0.154886 -0.241787   \n",
              "88822 -0.415338 -0.159798  0.117275 -0.095747  3.568275 -0.154886 -0.241787   \n",
              "\n",
              "tipo          R  indice_pobreza  \n",
              "0     -0.145895       -0.224919  \n",
              "1      0.384569        1.160462  \n",
              "2      3.270586        3.823244  \n",
              "3      1.448170        2.787963  \n",
              "4      0.741198        1.494013  \n",
              "...         ...             ...  \n",
              "88818 -0.542664       -0.264240  \n",
              "88819 -0.538736       -1.275321  \n",
              "88820 -0.578012       -0.827663  \n",
              "88821 -0.156186        1.784808  \n",
              "88822 -0.292553        0.305565  \n",
              "\n",
              "[88823 rows x 16 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-ae777a69-803d-4510-936f-2e6132de97c3\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>tipo</th>\n",
              "      <th>A</th>\n",
              "      <th>B</th>\n",
              "      <th>C</th>\n",
              "      <th>D</th>\n",
              "      <th>E</th>\n",
              "      <th>F</th>\n",
              "      <th>G</th>\n",
              "      <th>H</th>\n",
              "      <th>I</th>\n",
              "      <th>J</th>\n",
              "      <th>K</th>\n",
              "      <th>L</th>\n",
              "      <th>M</th>\n",
              "      <th>N</th>\n",
              "      <th>R</th>\n",
              "      <th>indice_pobreza</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-0.419381</td>\n",
              "      <td>-0.040624</td>\n",
              "      <td>0.106786</td>\n",
              "      <td>-0.680192</td>\n",
              "      <td>0.686328</td>\n",
              "      <td>0.049262</td>\n",
              "      <td>-0.405551</td>\n",
              "      <td>0.225999</td>\n",
              "      <td>-0.159798</td>\n",
              "      <td>0.237358</td>\n",
              "      <td>-0.180314</td>\n",
              "      <td>-0.184174</td>\n",
              "      <td>-0.154886</td>\n",
              "      <td>0.291738</td>\n",
              "      <td>-0.145895</td>\n",
              "      <td>-0.224919</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>0.294813</td>\n",
              "      <td>-0.040624</td>\n",
              "      <td>0.366193</td>\n",
              "      <td>0.630655</td>\n",
              "      <td>-0.257784</td>\n",
              "      <td>0.422137</td>\n",
              "      <td>5.014683</td>\n",
              "      <td>-0.357034</td>\n",
              "      <td>-0.159798</td>\n",
              "      <td>-0.225814</td>\n",
              "      <td>-0.180314</td>\n",
              "      <td>-0.184174</td>\n",
              "      <td>-0.154886</td>\n",
              "      <td>-0.241787</td>\n",
              "      <td>0.384569</td>\n",
              "      <td>1.160462</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>0.365886</td>\n",
              "      <td>-0.040624</td>\n",
              "      <td>-0.122115</td>\n",
              "      <td>-0.149914</td>\n",
              "      <td>-0.257784</td>\n",
              "      <td>1.569443</td>\n",
              "      <td>0.006857</td>\n",
              "      <td>-0.583769</td>\n",
              "      <td>-0.159798</td>\n",
              "      <td>-0.225814</td>\n",
              "      <td>-0.180314</td>\n",
              "      <td>4.975443</td>\n",
              "      <td>-0.154886</td>\n",
              "      <td>6.846483</td>\n",
              "      <td>3.270586</td>\n",
              "      <td>3.823244</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1.159162</td>\n",
              "      <td>-0.040624</td>\n",
              "      <td>0.087437</td>\n",
              "      <td>0.852422</td>\n",
              "      <td>1.111176</td>\n",
              "      <td>4.581116</td>\n",
              "      <td>-0.405551</td>\n",
              "      <td>-0.130298</td>\n",
              "      <td>-0.089347</td>\n",
              "      <td>-0.225814</td>\n",
              "      <td>-0.180314</td>\n",
              "      <td>-0.184174</td>\n",
              "      <td>-0.154886</td>\n",
              "      <td>-0.203679</td>\n",
              "      <td>1.448170</td>\n",
              "      <td>2.787963</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-0.701382</td>\n",
              "      <td>-0.040624</td>\n",
              "      <td>0.612372</td>\n",
              "      <td>-0.620714</td>\n",
              "      <td>2.008089</td>\n",
              "      <td>3.060939</td>\n",
              "      <td>-0.405551</td>\n",
              "      <td>-0.003981</td>\n",
              "      <td>-0.159798</td>\n",
              "      <td>-0.049123</td>\n",
              "      <td>-0.180314</td>\n",
              "      <td>-0.184174</td>\n",
              "      <td>-0.154886</td>\n",
              "      <td>0.771910</td>\n",
              "      <td>0.741198</td>\n",
              "      <td>1.494013</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>88818</th>\n",
              "      <td>-0.073185</td>\n",
              "      <td>-0.040624</td>\n",
              "      <td>-0.193327</td>\n",
              "      <td>-0.142480</td>\n",
              "      <td>-0.257784</td>\n",
              "      <td>0.422139</td>\n",
              "      <td>0.360351</td>\n",
              "      <td>-0.357037</td>\n",
              "      <td>0.333385</td>\n",
              "      <td>-0.034542</td>\n",
              "      <td>0.876786</td>\n",
              "      <td>-0.184174</td>\n",
              "      <td>-0.101017</td>\n",
              "      <td>-0.241787</td>\n",
              "      <td>-0.542664</td>\n",
              "      <td>-0.264240</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>88819</th>\n",
              "      <td>-0.637189</td>\n",
              "      <td>-0.040624</td>\n",
              "      <td>-0.100754</td>\n",
              "      <td>-0.662849</td>\n",
              "      <td>-0.257784</td>\n",
              "      <td>-0.151515</td>\n",
              "      <td>-0.405551</td>\n",
              "      <td>-0.583769</td>\n",
              "      <td>-0.159798</td>\n",
              "      <td>-0.225814</td>\n",
              "      <td>-0.180314</td>\n",
              "      <td>-0.184174</td>\n",
              "      <td>-0.154886</td>\n",
              "      <td>-0.241787</td>\n",
              "      <td>-0.538736</td>\n",
              "      <td>-1.275321</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>88820</th>\n",
              "      <td>-0.703675</td>\n",
              "      <td>-0.040624</td>\n",
              "      <td>0.440450</td>\n",
              "      <td>-0.266382</td>\n",
              "      <td>-0.257784</td>\n",
              "      <td>-0.438340</td>\n",
              "      <td>0.301436</td>\n",
              "      <td>-0.240428</td>\n",
              "      <td>-0.159798</td>\n",
              "      <td>-0.225814</td>\n",
              "      <td>-0.180314</td>\n",
              "      <td>-0.184174</td>\n",
              "      <td>-0.071632</td>\n",
              "      <td>-0.241787</td>\n",
              "      <td>-0.578012</td>\n",
              "      <td>-0.827663</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>88821</th>\n",
              "      <td>4.021647</td>\n",
              "      <td>-0.040624</td>\n",
              "      <td>1.317369</td>\n",
              "      <td>-0.781783</td>\n",
              "      <td>-0.257784</td>\n",
              "      <td>2.143095</td>\n",
              "      <td>-0.405551</td>\n",
              "      <td>-0.583769</td>\n",
              "      <td>-0.159798</td>\n",
              "      <td>-0.088578</td>\n",
              "      <td>-0.180314</td>\n",
              "      <td>-0.184174</td>\n",
              "      <td>-0.154886</td>\n",
              "      <td>-0.241787</td>\n",
              "      <td>-0.156186</td>\n",
              "      <td>1.784808</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>88822</th>\n",
              "      <td>-0.062862</td>\n",
              "      <td>-0.040624</td>\n",
              "      <td>-0.341846</td>\n",
              "      <td>0.651716</td>\n",
              "      <td>-0.257784</td>\n",
              "      <td>-0.036783</td>\n",
              "      <td>-0.405551</td>\n",
              "      <td>-0.415338</td>\n",
              "      <td>-0.159798</td>\n",
              "      <td>0.117275</td>\n",
              "      <td>-0.095747</td>\n",
              "      <td>3.568275</td>\n",
              "      <td>-0.154886</td>\n",
              "      <td>-0.241787</td>\n",
              "      <td>-0.292553</td>\n",
              "      <td>0.305565</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>88823 rows × 16 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ae777a69-803d-4510-936f-2e6132de97c3')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-ae777a69-803d-4510-936f-2e6132de97c3 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-ae777a69-803d-4510-936f-2e6132de97c3');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e6a5bf04-b9fb-471d-afe2-f4d87c7fdd63\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e6a5bf04-b9fb-471d-afe2-f4d87c7fdd63')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e6a5bf04-b9fb-471d-afe2-f4d87c7fdd63 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_5c4df58b-962f-4a14-9cd0-03b53b0fe28f\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_scaled')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_5c4df58b-962f-4a14-9cd0-03b53b0fe28f button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df_scaled');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_scaled",
              "summary": "{\n  \"name\": \"df_scaled\",\n  \"rows\": 88823,\n  \"fields\": [\n    {\n      \"column\": \"A\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000056292201565,\n        \"min\": -1.2676861684819627,\n        \"max\": 74.50583469313904,\n        \"num_unique_values\": 51438,\n        \"samples\": [\n          -0.8261748570510393,\n          -0.8928280162907848,\n          -0.8693320086352998\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"B\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000056292195705,\n        \"min\": -0.04062405002735116,\n        \"max\": 83.40035089685107,\n        \"num_unique_values\": 150,\n        \"samples\": [\n          8.303408545908091,\n          13.309698305964556,\n          2.6290510286566366\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"C\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.000005629220177,\n        \"min\": -0.6205808234468028,\n        \"max\": 44.30029387654817,\n        \"num_unique_values\": 15060,\n        \"samples\": [\n          0.5157274545459044,\n          -0.05600430035687301,\n          12.793513064111167\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"D\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000056292201287,\n        \"min\": -0.9676293526657449,\n        \"max\": 28.676130254787097,\n        \"num_unique_values\": 18008,\n        \"samples\": [\n          2.1422170572084505,\n          0.551354069147607,\n          -0.6654816776480862\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"E\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000056292203072,\n        \"min\": -0.25778429918639195,\n        \"max\": 94.2102931109001,\n        \"num_unique_values\": 2944,\n        \"samples\": [\n          1.3472055325943868,\n          2.1780265530497447,\n          1.911786210148817\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"F\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000056292200925,\n        \"min\": -0.7251658931058531,\n        \"max\": 21.762009819880838,\n        \"num_unique_values\": 4412,\n        \"samples\": [\n          -0.24330168103223476,\n          0.5024458680888629,\n          -0.05177434487836569\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"G\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000056292196815,\n        \"min\": -0.405551066719964,\n        \"max\": 120.04745561751905,\n        \"num_unique_values\": 5518,\n        \"samples\": [\n          -0.000803953669497581,\n          1.0726028422595282,\n          -0.10037032295858296\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"H\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000056292202992,\n        \"min\": -0.5837690097286052,\n        \"max\": 48.52080319416908,\n        \"num_unique_values\": 18559,\n        \"samples\": [\n          0.7225400280762484,\n          2.8933788551431077,\n          0.5790482739514488\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"I\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000056292193387,\n        \"min\": -0.15979765985815797,\n        \"max\": 212.11364603831157,\n        \"num_unique_values\": 3217,\n        \"samples\": [\n          0.4425892254177092,\n          1.9890571816562268,\n          5.9556741004915725\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"J\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.000005629219897,\n        \"min\": -0.22581368694385576,\n        \"max\": 56.6863147362372,\n        \"num_unique_values\": 12168,\n        \"samples\": [\n          -0.008295788533340677,\n          0.023780745203015905,\n          -0.1258033615528713\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"K\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000056292197006,\n        \"min\": -0.18031397182755285,\n        \"max\": 84.38775998624554,\n        \"num_unique_values\": 5844,\n        \"samples\": [\n          -0.02597732773186317,\n          0.04820315722102287,\n          3.0533556596335476\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"L\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.000005629220042,\n        \"min\": -0.1841740099776225,\n        \"max\": 46.68158974976791,\n        \"num_unique_values\": 2792,\n        \"samples\": [\n          13.840135931806355,\n          10.318777419390388,\n          0.41152232786208415\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"M\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000056292195505,\n        \"min\": -0.15488626695860816,\n        \"max\": 48.818066441460026,\n        \"num_unique_values\": 5992,\n        \"samples\": [\n          0.7711075219549292,\n          7.772843902676216,\n          -0.09464757562014436\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"N\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000056292206003,\n        \"min\": -0.24178744165245153,\n        \"max\": 117.6603763363363,\n        \"num_unique_values\": 6924,\n        \"samples\": [\n          2.593687038633037,\n          0.7025526452293943,\n          -0.2398723712159436\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.0000056292201551,\n        \"min\": -0.861272438528635,\n        \"max\": 45.516093200553044,\n        \"num_unique_values\": 13795,\n        \"samples\": [\n          2.041083431445603,\n          -0.023746231814731053,\n          -0.8094278224686859\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"indice_pobreza\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.89560164444809,\n        \"min\": -2.097376279288367,\n        \"max\": 98.12877119025384,\n        \"num_unique_values\": 88755,\n        \"samples\": [\n          1.0195233768543275,\n          1.188770429401233,\n          0.06813387643760181\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 106
        }
      ]
    },
    {
      "source": [
        "#ÍNDICE DE PROBREZA POR ACP\n",
        "df_pobreza = df_scaled[['indice_pobreza']].copy()\n",
        "df_pobreza"
      ],
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "e5ntUU7C7ebd",
        "outputId": "b091478e-f90e-408a-c97d-d69e0e101021"
      },
      "execution_count": 110,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "tipo   indice_pobreza\n",
              "0           -0.224919\n",
              "1            1.160462\n",
              "2            3.823244\n",
              "3            2.787963\n",
              "4            1.494013\n",
              "...               ...\n",
              "88818       -0.264240\n",
              "88819       -1.275321\n",
              "88820       -0.827663\n",
              "88821        1.784808\n",
              "88822        0.305565\n",
              "\n",
              "[88823 rows x 1 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d5724ad0-eb75-48d0-b7d3-1e9cea721417\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>tipo</th>\n",
              "      <th>indice_pobreza</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-0.224919</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1.160462</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>3.823244</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2.787963</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1.494013</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>88818</th>\n",
              "      <td>-0.264240</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>88819</th>\n",
              "      <td>-1.275321</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>88820</th>\n",
              "      <td>-0.827663</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>88821</th>\n",
              "      <td>1.784808</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>88822</th>\n",
              "      <td>0.305565</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>88823 rows × 1 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d5724ad0-eb75-48d0-b7d3-1e9cea721417')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d5724ad0-eb75-48d0-b7d3-1e9cea721417 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d5724ad0-eb75-48d0-b7d3-1e9cea721417');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-187c7007-d8dc-49b9-a803-9bd75e56985b\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-187c7007-d8dc-49b9-a803-9bd75e56985b')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-187c7007-d8dc-49b9-a803-9bd75e56985b button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_8b271b44-ccfb-4e49-a07e-a4f30d89a6b2\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df_pobreza')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_8b271b44-ccfb-4e49-a07e-a4f30d89a6b2 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df_pobreza');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_pobreza",
              "summary": "{\n  \"name\": \"df_pobreza\",\n  \"rows\": 88823,\n  \"fields\": [\n    {\n      \"column\": \"indice_pobreza\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.89560164444809,\n        \"min\": -2.097376279288367,\n        \"max\": 98.12877119025384,\n        \"num_unique_values\": 88755,\n        \"samples\": [\n          1.0195233768543275,\n          1.188770429401233,\n          0.06813387643760181\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 110
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# DISTRIBUCIÓN DEL ÍNDICE DE POBREZA POR ACP\n",
        "plt.figure(figsize=(10,6))\n",
        "title='Distribución del índice de pobreza por ACP'\n",
        "plt.title(title)\n",
        "plt.xlabel('Percentiles')\n",
        "plt.ylabel('Frecuencia')\n",
        "plt.hist(df_pobreza['indice_pobreza'],bins=1000)\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 565
        },
        "id": "9Lc5i-_z1Slo",
        "outputId": "df94df3d-552d-4de5-fb6e-fb4f6af06326"
      },
      "execution_count": 112,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1000x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#AHORA SE REALIZARÁ UNA PRUEBA DE UMBRAL CON LA LÍNEA DE POBREZA DEFINIDA\n",
        "# SE OBTENDRÁ EL ÍNDICE DE POBREZA RELACIONADO A LAS OBSERVACIONES DE TIPO DE GASTO ESPECIFICADAS\n",
        "medias = df_pivot.mean()\n",
        "desv_std = df_pivot.std()\n",
        "tipo_gasto = ['A','B','C','D','E','F','G','H','I','J','K','L','M','N','R']\n",
        "gasto =[3060,2700,124,386.6,59,0,0,660,0,117,0,0,0,540,607.735]\n",
        "linea =pd.DataFrame({'tipo_gasto':tipo_gasto,'gasto':gasto})\n",
        "linea['media'] = medias.values\n",
        "linea['desv_std'] = desv_std.values\n",
        "linea['estandarizada']=(linea['gasto']-linea['media'])/linea['desv_std']\n",
        "linea"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 519
        },
        "id": "g_pQ6f54RCmr",
        "outputId": "76e83aba-50d8-42ea-ef40-729dcd47268f"
      },
      "execution_count": 115,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "   tipo_gasto     gasto         media      desv_std  estandarizada\n",
              "0           A  3060.000  14217.762610  11215.585527      -0.994844\n",
              "1           B  2700.000      3.129802     77.043517      35.004505\n",
              "2           C   124.000   1771.048199   2853.871892      -0.577128\n",
              "3           D   386.600   2267.373335   2343.238238      -0.802639\n",
              "4           E    59.000    792.707000   3075.095982      -0.238596\n",
              "5           F     0.000   3670.027297   5060.977070      -0.725162\n",
              "6           G     0.000   1998.461697   4927.796056      -0.405549\n",
              "7           H   660.000   1763.083721   3020.190548      -0.365236\n",
              "8           I     0.000    221.877939   1388.500860      -0.159797\n",
              "9           J   117.000   1287.727656   5702.643284      -0.205296\n",
              "10          K     0.000    834.329510   4627.119011      -0.180313\n",
              "11          L     0.000    192.055996   1042.802276      -0.184173\n",
              "12          M     0.000   1546.967911   9987.823000      -0.154885\n",
              "13          N   540.000   1551.675386   6417.554649      -0.157642\n",
              "14          R   607.735   2741.074448   3182.604894      -0.670312"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-59a030cf-f6f1-4c28-a409-3f2fc4a71159\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>tipo_gasto</th>\n",
              "      <th>gasto</th>\n",
              "      <th>media</th>\n",
              "      <th>desv_std</th>\n",
              "      <th>estandarizada</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>A</td>\n",
              "      <td>3060.000</td>\n",
              "      <td>14217.762610</td>\n",
              "      <td>11215.585527</td>\n",
              "      <td>-0.994844</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>B</td>\n",
              "      <td>2700.000</td>\n",
              "      <td>3.129802</td>\n",
              "      <td>77.043517</td>\n",
              "      <td>35.004505</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>C</td>\n",
              "      <td>124.000</td>\n",
              "      <td>1771.048199</td>\n",
              "      <td>2853.871892</td>\n",
              "      <td>-0.577128</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>D</td>\n",
              "      <td>386.600</td>\n",
              "      <td>2267.373335</td>\n",
              "      <td>2343.238238</td>\n",
              "      <td>-0.802639</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>E</td>\n",
              "      <td>59.000</td>\n",
              "      <td>792.707000</td>\n",
              "      <td>3075.095982</td>\n",
              "      <td>-0.238596</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>F</td>\n",
              "      <td>0.000</td>\n",
              "      <td>3670.027297</td>\n",
              "      <td>5060.977070</td>\n",
              "      <td>-0.725162</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>G</td>\n",
              "      <td>0.000</td>\n",
              "      <td>1998.461697</td>\n",
              "      <td>4927.796056</td>\n",
              "      <td>-0.405549</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>H</td>\n",
              "      <td>660.000</td>\n",
              "      <td>1763.083721</td>\n",
              "      <td>3020.190548</td>\n",
              "      <td>-0.365236</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>I</td>\n",
              "      <td>0.000</td>\n",
              "      <td>221.877939</td>\n",
              "      <td>1388.500860</td>\n",
              "      <td>-0.159797</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>J</td>\n",
              "      <td>117.000</td>\n",
              "      <td>1287.727656</td>\n",
              "      <td>5702.643284</td>\n",
              "      <td>-0.205296</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>K</td>\n",
              "      <td>0.000</td>\n",
              "      <td>834.329510</td>\n",
              "      <td>4627.119011</td>\n",
              "      <td>-0.180313</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>L</td>\n",
              "      <td>0.000</td>\n",
              "      <td>192.055996</td>\n",
              "      <td>1042.802276</td>\n",
              "      <td>-0.184173</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>M</td>\n",
              "      <td>0.000</td>\n",
              "      <td>1546.967911</td>\n",
              "      <td>9987.823000</td>\n",
              "      <td>-0.154885</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>N</td>\n",
              "      <td>540.000</td>\n",
              "      <td>1551.675386</td>\n",
              "      <td>6417.554649</td>\n",
              "      <td>-0.157642</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>R</td>\n",
              "      <td>607.735</td>\n",
              "      <td>2741.074448</td>\n",
              "      <td>3182.604894</td>\n",
              "      <td>-0.670312</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-59a030cf-f6f1-4c28-a409-3f2fc4a71159')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-59a030cf-f6f1-4c28-a409-3f2fc4a71159 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-59a030cf-f6f1-4c28-a409-3f2fc4a71159');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d57796a8-2732-4da6-be28-a2eab1c0d283\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d57796a8-2732-4da6-be28-a2eab1c0d283')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d57796a8-2732-4da6-be28-a2eab1c0d283 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_06963c03-6872-4b54-83f3-0b2f010ffa2b\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('linea')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_06963c03-6872-4b54-83f3-0b2f010ffa2b button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('linea');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "linea",
              "summary": "{\n  \"name\": \"linea\",\n  \"rows\": 15,\n  \"fields\": [\n    {\n      \"column\": \"tipo_gasto\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 15,\n        \"samples\": [\n          \"J\",\n          \"L\",\n          \"A\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"gasto\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 977.9671933370622,\n        \"min\": 0.0,\n        \"max\": 3060.0,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          540.0,\n          2700.0,\n          0.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"media\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3436.8334255586756,\n        \"min\": 3.1298020782905325,\n        \"max\": 14217.762609571844,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          1287.7276564628532,\n          192.05599563176204,\n          14217.762609571844\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"desv_std\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3104.409342630254,\n        \"min\": 77.04351719062251,\n        \"max\": 11215.585527381314,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          5702.64328435283,\n          1042.8022758509828,\n          11215.585527381314\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"estandarizada\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9.149625649784321,\n        \"min\": -0.994844413814303,\n        \"max\": 35.004505197355705,\n        \"num_unique_values\": 15,\n        \"samples\": [\n          -0.20529561434697285,\n          -0.1841729732273877,\n          -0.994844413814303\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 115
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# SCORE OBTENIDO\n",
        "score_lp = np.dot(linea['estandarizada'], pca.components_[0])\n",
        "score_lp"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "34Quf1n3svwM",
        "outputId": "69bab37f-6b16-4f5e-a3aa-bd419ebac3e3"
      },
      "execution_count": 116,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "np.float64(-1.8165865648441724)"
            ]
          },
          "metadata": {},
          "execution_count": 116
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# HOGARES POR DEBAJO DEL UMBRAL (NO PARECE SER SIGNIFICATIVO O BIEN LA LÍNEA DE POBREZA PROPUESTA NO ES LA CORRECTA PARA ESTE TIPO DE ANÁLISIS, NO OBSTANTE SE RESCATA LA INTERPRETACIÓN DE LOS RESULTADOS OBTENIDOS POR ACP)\n",
        "poverty_households_1=df_pobreza[df_pobreza['indice_pobreza']<score_lp].shape[0]\n",
        "poverty_households_1"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jJFe-Ml9tgRz",
        "outputId": "ff062090-937e-4421-d3b0-09f53b056e7a"
      },
      "execution_count": 117,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "1799"
            ]
          },
          "metadata": {},
          "execution_count": 117
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# CÁLCULO DE LAS MEDIDAS FGT0,1,2\n",
        "poverty_line = 24763.005\n",
        "#CONTRIBUCIÓN DE CADA OBSERVACIÓN PARA EL CÁLCULO DE LAS MEDIDAS\n",
        "df4['FGT0'] = (df4['total'] < poverty_line).astype(int)\n",
        "df4['FGT1'] = np.where(df4['total'] < poverty_line,\n",
        "                       (poverty_line - df4['total']) / poverty_line,\n",
        "                       0)\n",
        "df4['FGT2'] = np.where(df4['total'] < poverty_line,\n",
        "                       ((poverty_line - df4['total']) / poverty_line) ** 2,\n",
        "                       0)"
      ],
      "metadata": {
        "id": "aglP9wNgvhTC"
      },
      "execution_count": 118,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df4"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 455
        },
        "id": "fTMgWCvSyk0R",
        "outputId": "d6be4246-c21d-4559-dea5-c2a7009a8ff5"
      },
      "execution_count": 119,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "tipo               A    B        C        D        E         F         G  \\\n",
              "folioviv                                                                   \n",
              "100005002    9514.19  0.0  2075.80   673.53  2903.22   3919.34      0.00   \n",
              "100005003   17524.25  0.0  2816.11  3745.14     0.00   5806.44  26709.66   \n",
              "100005004   18321.36  0.0  1422.55  1916.09     0.00  11612.90   2032.25   \n",
              "100012002   27218.37  0.0  2020.58  4264.79  4209.66  26854.82      0.00   \n",
              "100012004    6351.40  0.0  3518.67   812.90  6967.74  19161.28      0.00   \n",
              "...              ...  ...      ...      ...      ...       ...       ...   \n",
              "3260797907  13396.95  0.0  1219.32  1933.51     0.00   5806.45   3774.19   \n",
              "3260797908   7071.35  0.0  1483.51   714.17     0.00   2903.22      0.00   \n",
              "3260797909   6325.68  0.0  3028.03  1643.18     0.00   1451.61   3483.87   \n",
              "3260797910  59322.63  0.0  5530.63   435.48     0.00  14516.12      0.00   \n",
              "3260797912  13512.73  0.0   795.47  3794.49     0.00   3483.87      0.00   \n",
              "\n",
              "tipo              H       I        J       K        L       M         N  \\\n",
              "folioviv                                                                  \n",
              "100005002   2445.64    0.00  2641.29     0.0     0.00    0.00   3423.91   \n",
              "100005003    684.78    0.00     0.00     0.0     0.00    0.00      0.00   \n",
              "100005004      0.00    0.00     0.00     0.0  5380.43    0.00  45489.11   \n",
              "100012002   1369.56   97.82     0.00     0.0     0.00    0.00    244.56   \n",
              "100012004   1751.06    0.00  1007.60     0.0     0.00    0.00   6505.42   \n",
              "...             ...     ...      ...     ...      ...     ...       ...   \n",
              "3260797907   684.77  684.78  1090.75  4891.3     0.00  538.03      0.00   \n",
              "3260797908     0.00    0.00     0.00     0.0     0.00    0.00      0.00   \n",
              "3260797909  1036.95    0.00     0.00     0.0     0.00  831.52      0.00   \n",
              "3260797910     0.00    0.00   782.60     0.0     0.00    0.00      0.00   \n",
              "3260797912   508.69    0.00  1956.50   391.3  3913.04    0.00      0.00   \n",
              "\n",
              "tipo               R     total  FGT0      FGT1      FGT2  \n",
              "folioviv                                                  \n",
              "100005002    2276.75  29873.67     0  0.000000  0.000000  \n",
              "100005003    3965.00  61251.38     0  0.000000  0.000000  \n",
              "100005004   13150.00  99324.69     0  0.000000  0.000000  \n",
              "100012002    7350.00  73630.16     0  0.000000  0.000000  \n",
              "100012004    5100.00  51176.07     0  0.000000  0.000000  \n",
              "...              ...       ...   ...       ...       ...  \n",
              "3260797907   1014.00  35034.05     0  0.000000  0.000000  \n",
              "3260797908   1026.50  13198.75     1  0.466997  0.218086  \n",
              "3260797909    901.50  18702.34     1  0.244747  0.059901  \n",
              "3260797910   2244.00  82831.46     0  0.000000  0.000000  \n",
              "3260797912   1810.00  30166.09     0  0.000000  0.000000  \n",
              "\n",
              "[88823 rows x 19 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-7f1bbf0f-4234-47d9-b1cb-93b2c3d3a661\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>tipo</th>\n",
              "      <th>A</th>\n",
              "      <th>B</th>\n",
              "      <th>C</th>\n",
              "      <th>D</th>\n",
              "      <th>E</th>\n",
              "      <th>F</th>\n",
              "      <th>G</th>\n",
              "      <th>H</th>\n",
              "      <th>I</th>\n",
              "      <th>J</th>\n",
              "      <th>K</th>\n",
              "      <th>L</th>\n",
              "      <th>M</th>\n",
              "      <th>N</th>\n",
              "      <th>R</th>\n",
              "      <th>total</th>\n",
              "      <th>FGT0</th>\n",
              "      <th>FGT1</th>\n",
              "      <th>FGT2</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>folioviv</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>100005002</th>\n",
              "      <td>9514.19</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2075.80</td>\n",
              "      <td>673.53</td>\n",
              "      <td>2903.22</td>\n",
              "      <td>3919.34</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2445.64</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2641.29</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>3423.91</td>\n",
              "      <td>2276.75</td>\n",
              "      <td>29873.67</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100005003</th>\n",
              "      <td>17524.25</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2816.11</td>\n",
              "      <td>3745.14</td>\n",
              "      <td>0.00</td>\n",
              "      <td>5806.44</td>\n",
              "      <td>26709.66</td>\n",
              "      <td>684.78</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>3965.00</td>\n",
              "      <td>61251.38</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100005004</th>\n",
              "      <td>18321.36</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1422.55</td>\n",
              "      <td>1916.09</td>\n",
              "      <td>0.00</td>\n",
              "      <td>11612.90</td>\n",
              "      <td>2032.25</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5380.43</td>\n",
              "      <td>0.00</td>\n",
              "      <td>45489.11</td>\n",
              "      <td>13150.00</td>\n",
              "      <td>99324.69</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100012002</th>\n",
              "      <td>27218.37</td>\n",
              "      <td>0.0</td>\n",
              "      <td>2020.58</td>\n",
              "      <td>4264.79</td>\n",
              "      <td>4209.66</td>\n",
              "      <td>26854.82</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1369.56</td>\n",
              "      <td>97.82</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>244.56</td>\n",
              "      <td>7350.00</td>\n",
              "      <td>73630.16</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>100012004</th>\n",
              "      <td>6351.40</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3518.67</td>\n",
              "      <td>812.90</td>\n",
              "      <td>6967.74</td>\n",
              "      <td>19161.28</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1751.06</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1007.60</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>6505.42</td>\n",
              "      <td>5100.00</td>\n",
              "      <td>51176.07</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3260797907</th>\n",
              "      <td>13396.95</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1219.32</td>\n",
              "      <td>1933.51</td>\n",
              "      <td>0.00</td>\n",
              "      <td>5806.45</td>\n",
              "      <td>3774.19</td>\n",
              "      <td>684.77</td>\n",
              "      <td>684.78</td>\n",
              "      <td>1090.75</td>\n",
              "      <td>4891.3</td>\n",
              "      <td>0.00</td>\n",
              "      <td>538.03</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1014.00</td>\n",
              "      <td>35034.05</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3260797908</th>\n",
              "      <td>7071.35</td>\n",
              "      <td>0.0</td>\n",
              "      <td>1483.51</td>\n",
              "      <td>714.17</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2903.22</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1026.50</td>\n",
              "      <td>13198.75</td>\n",
              "      <td>1</td>\n",
              "      <td>0.466997</td>\n",
              "      <td>0.218086</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3260797909</th>\n",
              "      <td>6325.68</td>\n",
              "      <td>0.0</td>\n",
              "      <td>3028.03</td>\n",
              "      <td>1643.18</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1451.61</td>\n",
              "      <td>3483.87</td>\n",
              "      <td>1036.95</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>831.52</td>\n",
              "      <td>0.00</td>\n",
              "      <td>901.50</td>\n",
              "      <td>18702.34</td>\n",
              "      <td>1</td>\n",
              "      <td>0.244747</td>\n",
              "      <td>0.059901</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3260797910</th>\n",
              "      <td>59322.63</td>\n",
              "      <td>0.0</td>\n",
              "      <td>5530.63</td>\n",
              "      <td>435.48</td>\n",
              "      <td>0.00</td>\n",
              "      <td>14516.12</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>782.60</td>\n",
              "      <td>0.0</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>2244.00</td>\n",
              "      <td>82831.46</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3260797912</th>\n",
              "      <td>13512.73</td>\n",
              "      <td>0.0</td>\n",
              "      <td>795.47</td>\n",
              "      <td>3794.49</td>\n",
              "      <td>0.00</td>\n",
              "      <td>3483.87</td>\n",
              "      <td>0.00</td>\n",
              "      <td>508.69</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1956.50</td>\n",
              "      <td>391.3</td>\n",
              "      <td>3913.04</td>\n",
              "      <td>0.00</td>\n",
              "      <td>0.00</td>\n",
              "      <td>1810.00</td>\n",
              "      <td>30166.09</td>\n",
              "      <td>0</td>\n",
              "      <td>0.000000</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>88823 rows × 19 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7f1bbf0f-4234-47d9-b1cb-93b2c3d3a661')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-7f1bbf0f-4234-47d9-b1cb-93b2c3d3a661 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-7f1bbf0f-4234-47d9-b1cb-93b2c3d3a661');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-e598f100-faa4-4c64-841f-bbccdb14af26\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e598f100-faa4-4c64-841f-bbccdb14af26')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-e598f100-faa4-4c64-841f-bbccdb14af26 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_be308b81-050c-4a90-b736-eeba20a6ad73\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df4')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_be308b81-050c-4a90-b736-eeba20a6ad73 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df4');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df4",
              "summary": "{\n  \"name\": \"df4\",\n  \"rows\": 88823,\n  \"fields\": [\n    {\n      \"column\": \"folioviv\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 931422631,\n        \"min\": 100005002,\n        \"max\": 3260797912,\n        \"num_unique_values\": 88823,\n        \"samples\": [\n          1360161604,\n          360196911,\n          1960206609\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"A\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 11215.585527381314,\n        \"min\": 0.0,\n        \"max\": 849839.62,\n        \"num_unique_values\": 52237,\n        \"samples\": [\n          28561.96,\n          14721.34,\n          3008.52\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"B\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 77.04351719062251,\n        \"min\": 0.0,\n        \"max\": 6428.55,\n        \"num_unique_values\": 151,\n        \"samples\": [\n          321.4,\n          1028.55,\n          205.69\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"C\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2853.8718916149787,\n        \"min\": 0.0,\n        \"max\": 128197.7,\n        \"num_unique_values\": 15518,\n        \"samples\": [\n          1341.27,\n          444.15000000000003,\n          2267.39\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"D\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2343.238237548831,\n        \"min\": 0.0,\n        \"max\": 69462.0,\n        \"num_unique_values\": 18444,\n        \"samples\": [\n          5346.0,\n          4093.5099999999998,\n          914.46\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"E\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3075.0959819895825,\n        \"min\": 0.0,\n        \"max\": 290496.77,\n        \"num_unique_values\": 2977,\n        \"samples\": [\n          296.12,\n          328.06,\n          3390.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"F\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5060.977069511883,\n        \"min\": 0.0,\n        \"max\": 113806.43999999999,\n        \"num_unique_values\": 4482,\n        \"samples\": [\n          8999.99,\n          1654.8200000000002,\n          42387.09\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"G\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4927.796056275623,\n        \"min\": 0.0,\n        \"max\": 593564.51,\n        \"num_unique_values\": 5577,\n        \"samples\": [\n          711.27,\n          10626.0,\n          1741.91\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"H\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3020.190548080199,\n        \"min\": 0.0,\n        \"max\": 148304.33000000002,\n        \"num_unique_values\": 18921,\n        \"samples\": [\n          3872.9,\n          4248.53,\n          939.09\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"I\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1388.5008601289426,\n        \"min\": 0.0,\n        \"max\": 294740.2,\n        \"num_unique_values\": 3272,\n        \"samples\": [\n          1093.67,\n          1222.81,\n          469.55\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"J\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5702.64328435283,\n        \"min\": 0.0,\n        \"max\": 324547.74,\n        \"num_unique_values\": 12671,\n        \"samples\": [\n          290.54,\n          3629.33,\n          1299.0900000000001\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"K\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 4627.1190110402895,\n        \"min\": 0.0,\n        \"max\": 391304.33999999997,\n        \"num_unique_values\": 5887,\n        \"samples\": [\n          2983.41,\n          682.33,\n          98.36\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"L\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1042.8022758509828,\n        \"min\": 0.0,\n        \"max\": 48871.45,\n        \"num_unique_values\": 2805,\n        \"samples\": [\n          56.24,\n          9297.53,\n          3756.52\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"M\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9987.82299967456,\n        \"min\": 0.0,\n        \"max\": 489130.43,\n        \"num_unique_values\": 6075,\n        \"samples\": [\n          4770.48,\n          1526.08,\n          1614.1100000000001\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"N\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6417.554649071503,\n        \"min\": 0.0,\n        \"max\": 756639.3200000001,\n        \"num_unique_values\": 7032,\n        \"samples\": [\n          9696.13,\n          21864.12,\n          2754.0800000000004\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"R\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3182.604894412366,\n        \"min\": 0.0,\n        \"max\": 147600.0,\n        \"num_unique_values\": 13795,\n        \"samples\": [\n          9237.0,\n          2665.5,\n          165.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"total\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 32568.987389120273,\n        \"min\": 0.0,\n        \"max\": 1663770.25,\n        \"num_unique_values\": 88422,\n        \"samples\": [\n          10277.14,\n          19972.72,\n          54210.56999999999\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FGT0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 0,\n        \"max\": 1,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          1,\n          0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FGT1\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.24369191055222023,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 39440,\n        \"samples\": [\n          0.06252290463132407,\n          0.01995456528801743\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"FGT2\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1676181091581474,\n        \"min\": 0.0,\n        \"max\": 1.0,\n        \"num_unique_values\": 39440,\n        \"samples\": [\n          0.003909113603537644,\n          0.0003981846758337501\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 119
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "overall_FGT0 = df4['FGT0'].mean()\n",
        "overall_FGT1 = df4['FGT1'].mean()\n",
        "overall_FGT2 = df4['FGT2'].mean()\n",
        "\n",
        "print(\"FGT0:\", overall_FGT0)\n",
        "print(\"FGT1:\", overall_FGT1)\n",
        "print(\"FGT2:\", overall_FGT2)\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "X5O7FZRtzMeh",
        "outputId": "05aa9acf-7b9b-4412-8540-8398a3020857"
      },
      "execution_count": 120,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "FGT0: 0.4472377649933013\n",
            "FGT1: 0.16737884548468906\n",
            "FGT2: 0.08740075659916012\n"
          ]
        }
      ]
    }
  ]
}